# -*- coding: utf-8 -*-
"""Day3 Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yg6Qr4EqAF19FZsgzBWexOY_Aj0sCq53
"""

# Assignment - Implement a decorator mod_div() which assures that the numerator is always greater than the denominator
# e.g. if a = 2, b = 4, then div(a, b) should return 2.0 as the output and not 0.5
def mod_div(fun):
  def inner(a, b):
    if a < b:
      a, b = b, a
    fun(a, b)   

  return inner

@mod_div
def div(a, b):
  print(a/b)

div(2, 4)

# Project: WAP to generate everytime a 6 character OTP and print it.
import random
import string

id = ''
characters_list = list(string.digits)
for i in range(6):
  id += random.choice(characters_list)

print(id)

